name: 'Package Test and Validation'
description: 'Build, test, lint, and validate a package for publishing'

inputs:
  package-name:
    description: 'Name of the package to test and validate'
    required: true
  skip-tests:
    description: 'Skip running tests'
    required: false
    default: 'false'
  skip-lint:
    description: 'Skip running linting'
    required: false
    default: 'false'
  skip-jsr-validate:
    description: 'Skip JSR validation'
    required: false
    default: 'false'
  skip-npm-dry-run:
    description: 'Skip NPM dry run'
    required: false
    default: 'false'
  npm-token:
    description: 'NPM token for authentication'
    required: false
  github-token:
    description: 'GitHub token for config'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Build dependencies and ${{ inputs.package-name }}
      shell: bash
      run: pnpm --filter ${{ inputs.package-name }}... build

    - name: Run tests for ${{ inputs.package-name }}
      if: inputs.skip-tests != 'true'
      shell: bash
      run: pnpm --filter ${{ inputs.package-name }} test
      env:
        CONFIG_GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Run linting for ${{ inputs.package-name }}
      if: inputs.skip-lint != 'true'
      shell: bash
      run: pnpm --filter ${{ inputs.package-name }} lint

    - name: Dry run JSR publish for ${{ inputs.package-name }}
      if: inputs.skip-jsr-validate != 'true'
      shell: bash
      run: pnpm --filter ${{ inputs.package-name }} jsr:validate

    - name: Add Auth Token for npm
      if: inputs.skip-npm-dry-run != 'true' && inputs.npm-token != ''
      shell: bash
      run: echo "//registry.npmjs.org/:_authToken=${{ inputs.npm-token }}" > ~/.npmrc

    - name: Dry run NPM publish for ${{ inputs.package-name }}
      if: inputs.skip-npm-dry-run != 'true'
      shell: bash
      working-directory: packages/${{ inputs.package-name }}
      run: npm publish --access public --dry-run
