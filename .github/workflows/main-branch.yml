name: 'Main Branch Actions'

on:
  push:
    branches:
      - main

jobs:
  detect-version-bumps:
    name: 'Detect Version Bumps'
    runs-on: ubuntu-latest
    outputs:
      packages-to-publish: ${{ steps.versions.outputs.packages }}
      has-packages: ${{ steps.versions.outputs.has-packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Detect packages with version bumps
        id: versions
        run: ./scripts/package-utils.sh detect-version-bumps-ci

  publish:
    name: 'Publish Packages'
    runs-on: ubuntu-latest
    needs: detect-version-bumps
    if: needs.detect-version-bumps.outputs.has-packages == 'true'
    strategy:
      matrix:
        package: ${{ fromJson(format('["{0}"]', needs.detect-version-bumps.outputs.packages-to-publish == '' && 'none' || join(fromJson(format('["{0}"]', needs.detect-version-bumps.outputs.packages-to-publish)), '","'))) }}
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build ${{ matrix.package }}
        run: pnpm --filter ${{ matrix.package }} build

      - name: Publish ${{ matrix.package }} to JSR
        run: pnpm --filter ${{ matrix.package }} jsr:publish

      - name: Add Auth Token for npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish ${{ matrix.package }} to NPM
        working-directory: packages/${{ matrix.package }}
        run: npm publish --access public

  summary:
    name: 'Publish Summary'
    runs-on: ubuntu-latest
    needs: [detect-version-bumps, publish]
    if: always()
    steps:
      - name: Print summary
        run: |
          if [ "${{ needs.detect-version-bumps.outputs.has-packages }}" == "true" ]; then
            echo "✅ Published packages: ${{ needs.detect-version-bumps.outputs.packages-to-publish }}"
          else
            echo "ℹ️  No packages had version bumps, nothing to publish"
          fi
